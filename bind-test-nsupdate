#!/bin/bash

source /usr/local/lib/entrypoint.sh

BOLD='\033[0;1m'

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
GRAY='\033[0;90m'
NC='\033[0m'

root=/etc/bind/keys
server=127.0.0.1

if [[ -z $2 ]] ; then
	echo "usage: $0 <fwdzone> <update key name> [<revzone=1.168.192.in-addr.arpa> <ip address=192.168.1.1>]"
	echo "ex: $0 test.com updater.test.com"
	exit 1
fi

function call_nsupdate()
{
	tmp=$(mktemp /tmp/nsupdate.XXXXXX)
	cat > $tmp
	[[ -n "$DEBUG" ]] && cat $tmp
	nsupdate "${nsopts[@]}" $tmp
	rm --force $tmp
}

function reverseRecord() {
	echo $1 | awk -F. '{print $4"."$3"."$2"."$1".in-addr.arpa."}'
}

function verify
{
	printf "Checking $2"
	printf ".%0.s" $(eval echo "{1..$(( $(tput cols) - 21 - $(expr length "$2")))}")
	if [[ $1 -eq 0 ]] ; then
		echo -e "[  ${GREEN}PASSED${NC}  ]"
	else
		echo -e "[  ${RED}FAILED${NC}  ]"
	fi

	return $1
}

fwdzone=$1
key=$(ls $root/K$2*.key)
key=${key%.*}
revzone=${3:-1.168.192.in-addr.arpa}
address=${4:-192.168.1.1}
cn=$(basename $0).$fwdzone.
revaddress=$(reverseRecord $address)

log "Testing using:"
log "	Foward Zone  : $fwdzone"
log "	Reverse Zone : $revzone"
log "	Update Key   : $key"
log "	A Record     : $cn"
log "	IP Address   : $address"

nsopts=(-k $key)
if [[ -n "$DEBUG" ]] ; then
	nsopts+=(-d)
	set -x
fi

result=0

log "Adding record: $cn -> $address ..."
call_nsupdate <<-EOF
	server $server
	zone $fwdzone
	update delete $cn A
	update add $cn 3600 A $address
	send
EOF
[[ "X$(dig +short $cn @$server)" == "X$address" ]]
verify $? "positive forward lookup" || result=1

log "Adding record: $address -> $cn ..."
call_nsupdate <<-EOF
	server $server
	zone $revzone
	update delete $revaddress PTR
	update add $revaddress 3600 PTR $cn
	send
EOF
[[ "X$(dig +short -x $address @$server)" == "X$cn" ]]
verify $? "positive reverse lookup" || result=1

log "Removing record: $cn ..."
call_nsupdate <<-EOF
	server $server
	zone $fwdzone
	update delete $cn A
	send
EOF
[[ "X$(dig +short $cn @$server)" == "X" ]]
verify $? "negative forward lookup" || result=1

log "Removing record: $address ..."
call_nsupdate <<-EOF
	server $server
	zone $revzone
	update delete $revaddress PTR
	send
EOF
[[ "X$(dig +short -x $address @$server)" == "X" ]]
verify $? "negative reverse lookuip" || result=1

exit $result
